import{_ as s,c as a,a as n,o as i}from"./app-Mu4hF0Cq.js";const t={};function l(p,e){return i(),a("div",null,e[0]||(e[0]=[n(`<h2 id="输入pip-install-pillow后显示error-externally-managed-environment" tabindex="-1"><a class="header-anchor" href="#输入pip-install-pillow后显示error-externally-managed-environment"><span>输入<code>pip install pillow</code>后显示<code>error：externally-managed-environment</code></span></a></h2><p>输入 <code>pip install pillow</code> 遇到错误：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>error: externally-managed-environment</span></span>
<span class="line"><span></span></span>
<span class="line"><span>× This environment is externally managed</span></span>
<span class="line"><span>╰─&gt; To install Python packages system-wide, try apt install</span></span>
<span class="line"><span>    python3-xyz, where xyz is the package you are trying to</span></span>
<span class="line"><span>    install.</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    If you wish to install a non-Debian-packaged Python package,</span></span>
<span class="line"><span>    create a virtual environment using python3 -m venv path/to/venv.</span></span>
<span class="line"><span>    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make</span></span>
<span class="line"><span>    sure you have python3-full installed.</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    If you wish to install a non-Debian packaged Python application,</span></span>
<span class="line"><span>    it may be easiest to use pipx install xyz, which will manage a</span></span>
<span class="line"><span>    virtual environment for you. Make sure you have pipx installed.</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    See /usr/share/doc/python3.12/README.venv for more information.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.</span></span>
<span class="line"><span>hint: See PEP 668 for the detailed specification.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><p>这个错误是因为你在一个 <strong>externally managed environment（外部管理环境）</strong> 中尝试直接用 <code>pip</code> 安装包，而这个环境被你的系统（比如基于 Debian 的操作系统，如 Ubuntu）设置为受限制状态。这样设计是为了防止你意外破坏系统的全局 Python 环境。</p><p>这个限制是基于 <a href="https://peps.python.org/pep-0668/" target="_blank" rel="noopener noreferrer">PEP 668</a> 的规范，确保系统的 Python 和包管理器（如 <code>apt</code>）之间不会发生冲突。</p><hr><h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法"><span>解决方法</span></a></h3><p>根据你的需求选择一种解决方案：</p><h4 id="_1-使用虚拟环境" tabindex="-1"><a class="header-anchor" href="#_1-使用虚拟环境"><span>1. <strong>使用虚拟环境</strong></span></a></h4><p>推荐在虚拟环境中管理 Python 包，而不是直接修改全局环境：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python3</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> venv</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> myenv</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> myenv/bin/activate</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 包名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>退出虚拟环境：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">deactivate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-使用-pipx-安装独立的-python-应用" tabindex="-1"><a class="header-anchor" href="#_2-使用-pipx-安装独立的-python-应用"><span>2. <strong>使用 <code>pipx</code> 安装独立的 Python 应用</strong></span></a></h4><p><code>pipx</code> 会为每个工具创建一个独立的虚拟环境：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pipx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pipx</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 包名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-全局安装-强制忽略限制-不推荐" tabindex="-1"><a class="header-anchor" href="#_3-全局安装-强制忽略限制-不推荐"><span>3. <strong>全局安装，强制忽略限制（不推荐）</strong></span></a></h4><p>如果你确定自己知道在做什么，可以用 <code>--break-system-packages</code> 参数强制安装：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 包名</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --break-system-packages</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><strong>警告</strong>：强制操作可能导致系统的 Python 环境出问题，影响到系统依赖的工具和功能。</p></blockquote><h4 id="_4-使用系统包管理器-apt-安装" tabindex="-1"><a class="header-anchor" href="#_4-使用系统包管理器-apt-安装"><span>4. <strong>使用系统包管理器 <code>apt</code> 安装</strong></span></a></h4><p>如果目标库已经被打包为 Debian 系统包，可以直接用 <code>apt</code>：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python3-xyz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_5-检查-python-环境" tabindex="-1"><a class="header-anchor" href="#_5-检查-python-环境"><span>5. <strong>检查 Python 环境</strong></span></a></h4><p>确保你正在用的 <code>pip</code> 对应的是正确的 Python 环境：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python3</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --user</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 包名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>--user</code> 参数只安装到当前用户目录，而不会影响系统全局环境。</p><hr><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>为了安全和长期维护，建议使用虚拟环境或 <code>pipx</code>，尽量避免直接修改系统的全局 Python 环境。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>也可以参考<a href="https://blog.csdn.net/qq_25439417/article/details/139485697" target="_blank" rel="noopener noreferrer">CSDN 文章1</a>，<a href="https://blog.csdn.net/iblade/article/details/135002063" target="_blank" rel="noopener noreferrer">CSDN 文章2</a></p></div>`,32)]))}const d=s(t,[["render",l],["__file","14.html.vue"]]),o=JSON.parse('{"path":"/tech/14.html","title":"记录：error：externally-managed-environment","lang":"zh-CN","frontmatter":{"tags":["技术文档"],"cover":"/img/154.jpg","prev":{"link":"./13.md","text":"怎么获取文件夹结构并包含里面的文件"},"next":false,"title":"记录：error：externally-managed-environment","description":"输入pip install pillow后显示error：externally-managed-environment 输入 pip install pillow 遇到错误： 解决方案 这个错误是因为你在一个 externally managed environment（外部管理环境） 中尝试直接用 pip 安装包，而这个环境被你的系统（比如基于 De...","head":[["meta",{"property":"og:url","content":"https://docs.wenturc.com/tech/14.html"}],["meta",{"property":"og:site_name","content":"WentUrc Docs"}],["meta",{"property":"og:title","content":"记录：error：externally-managed-environment"}],["meta",{"property":"og:description","content":"输入pip install pillow后显示error：externally-managed-environment 输入 pip install pillow 遇到错误： 解决方案 这个错误是因为你在一个 externally managed environment（外部管理环境） 中尝试直接用 pip 安装包，而这个环境被你的系统（比如基于 De..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://docs.wenturc.com/img/154.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-16T14:48:27.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://docs.wenturc.com/img/154.jpg"}],["meta",{"name":"twitter:image:alt","content":"记录：error：externally-managed-environment"}],["meta",{"property":"article:tag","content":"技术文档"}],["meta",{"property":"article:modified_time","content":"2024-12-16T14:48:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"记录：error：externally-managed-environment\\",\\"image\\":[\\"https://docs.wenturc.com/img/154.jpg\\"],\\"dateModified\\":\\"2024-12-16T14:48:27.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"输入pip install pillow后显示error：externally-managed-environment","slug":"输入pip-install-pillow后显示error-externally-managed-environment","link":"#输入pip-install-pillow后显示error-externally-managed-environment","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[{"level":3,"title":"解决方法","slug":"解决方法","link":"#解决方法","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]}],"readingTime":{"minutes":2.2,"words":661},"git":{"createdTime":1734360507000,"updatedTime":1734360507000,"contributors":[{"name":"冰苷晶","email":"2749332490@qq.com","commits":1,"url":"https://github.com/冰苷晶"}]},"autoDesc":true,"filePathRelative":"tech/14.md","categoryList":[{"id":"d9f913","sort":10011,"name":"tech"}],"bulletin":false}');export{d as comp,o as data};
