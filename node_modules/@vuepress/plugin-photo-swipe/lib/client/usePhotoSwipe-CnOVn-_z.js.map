{"version":3,"file":"usePhotoSwipe-CnOVn-_z.js","sources":["../../src/client/helpers/photo-swipe.ts","../../src/client/utils/icon.ts","../../src/client/utils/images.ts","../../src/client/utils/initPhotoSwipe.ts","../../src/client/utils/usePhotoSwipe.ts","../../src/client/composables/usePhotoSwipe.ts"],"sourcesContent":["import { isFunction } from '@vuepress/helper/client'\nimport type { PhotoSwipeOptions as OriginalPhotoSwipeOptions } from 'photoswipe'\nimport type { App, MaybeRefOrGetter, Ref } from 'vue'\nimport { inject, isRef, ref, watch } from 'vue'\n\nexport type PhotoSwipeOptions = Omit<\n  OriginalPhotoSwipeOptions,\n  // These are handled internally\n  'dataSource' | 'index'\n>\n\ndeclare const __VUEPRESS_DEV__: boolean\n\nconst photoswipeOptions: Ref<PhotoSwipeOptions> = ref({})\n\nconst photoswipeSymbol = Symbol(__VUEPRESS_DEV__ ? 'photoswipe' : '')\n\nexport const definePhotoSwipeConfig = (\n  options: MaybeRefOrGetter<PhotoSwipeOptions>,\n): void => {\n  if (isRef(options)) {\n    watch(\n      () => options.value,\n      (value) => {\n        photoswipeOptions.value = value\n      },\n    )\n  } else if (isFunction(options)) {\n    watch(options, (value) => {\n      photoswipeOptions.value = value\n    })\n  } else {\n    photoswipeOptions.value = options\n  }\n}\n\nexport const usePhotoSwipeOptions = (): Ref<PhotoSwipeOptions> =>\n  inject(photoswipeSymbol)!\n\nexport const injectPhotoSwipeConfig = (app: App): void => {\n  app.provide(photoswipeSymbol, photoswipeOptions)\n}\n","export const LOADING_ICON =\n  '<div class=\"photo-swipe-loading\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" preserveAspectRatio=\"xMidYMid\" viewBox=\"25 25 50 50\"><animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"2s\" keyTimes=\"0;1\" repeatCount=\"indefinite\" values=\"0;360\"></animateTransform><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"4\" stroke-linecap=\"round\"><animate attributeName=\"stroke-dasharray\" dur=\"1.5s\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" values=\"1,200;90,200;1,200\"></animate><animate attributeName=\"stroke-dashoffset\" dur=\"1.5s\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" values=\"0;-35px;-125px\"></animate></circle></svg></div>'\n","import { isString } from '@vuepress/helper/client'\nimport type { SlideData } from 'photoswipe'\n\nexport const getImages = (selector: string[] | string): HTMLImageElement[] =>\n  isString(selector)\n    ? Array.from(document.querySelectorAll<HTMLImageElement>(selector))\n    : selector\n        .map((item) =>\n          Array.from(document.querySelectorAll<HTMLImageElement>(item)),\n        )\n        .flat()\n\nexport const getImageElementInfo = (\n  image: HTMLImageElement,\n): Promise<SlideData> =>\n  new Promise<SlideData>((resolve, reject) => {\n    if (image.complete) {\n      resolve({\n        type: 'image',\n        element: image,\n        src: image.src,\n        width: image.naturalWidth,\n        height: image.naturalHeight,\n        alt: image.alt,\n        msrc: image.src,\n      })\n    } else {\n      image.onload = (): void => {\n        resolve(getImageElementInfo(image))\n      }\n      image.onerror = (): void => {\n        reject()\n      }\n    }\n  })\n\nexport const getImageUrlInfo = (image: string): Promise<SlideData> =>\n  new Promise<SlideData>((resolve, reject) => {\n    const el = new Image()\n\n    el.src = image\n    el.onload = (): void => {\n      resolve(getImageElementInfo(el))\n    }\n    el.onerror = (): void => {\n      reject()\n    }\n  })\n","import { useFullscreen } from '@vueuse/core'\nimport type PhotoSwipe from 'photoswipe'\n\nexport const initPhotoSwipe = (\n  photoSwipe: PhotoSwipe,\n  {\n    download = true,\n    fullscreen = true,\n  }: { download?: boolean; fullscreen?: boolean } = {},\n): void => {\n  photoSwipe.on('uiRegister', () => {\n    // add bullets indicator\n    photoSwipe.ui!.registerElement({\n      name: 'bulletsIndicator',\n      className: 'photo-swipe-bullets-indicator',\n      appendTo: 'wrapper',\n      onInit: (el) => {\n        const bullets: HTMLElement[] = []\n        let prevIndex = -1\n\n        for (let i = 0; i < photoSwipe.getNumItems(); i++) {\n          const bullet = document.createElement('div')\n\n          bullet.className = 'photo-swipe-bullet'\n          bullet.onclick = (event: Event): void => {\n            photoSwipe.goTo(bullets.indexOf(event.target as HTMLElement))\n          }\n          bullets.push(bullet)\n          el.appendChild(bullet)\n        }\n\n        photoSwipe.on('change', () => {\n          if (prevIndex >= 0) bullets[prevIndex].classList.remove('active')\n\n          bullets[photoSwipe.currIndex].classList.add('active')\n          prevIndex = photoSwipe.currIndex\n        })\n      },\n    })\n\n    // add fullscreen button if supported\n    if (fullscreen) {\n      const { isSupported, toggle } = useFullscreen()\n\n      if (isSupported.value)\n        photoSwipe.ui!.registerElement({\n          name: 'fullscreen',\n          order: 7,\n          isButton: true,\n\n          html: '<svg class=\"pswp__icn\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z\"/></svg>',\n\n          onClick: () => {\n            void toggle()\n          },\n        })\n    }\n\n    if (download) {\n      // add download button\n      photoSwipe.ui!.registerElement({\n        name: 'download',\n        order: 8,\n        isButton: true,\n        tagName: 'a',\n\n        // SVG with outline\n        html: {\n          isCustomSVG: true,\n          inner:\n            '<path d=\"M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14\" id=\"pswp__icn-download\"/>',\n          outlineID: 'pswp__icn-download',\n        },\n\n        onInit: (el) => {\n          el.setAttribute('download', '')\n          el.setAttribute('target', '_blank')\n          el.setAttribute('rel', 'noopener')\n\n          photoSwipe.on('change', () => {\n            el.setAttribute('href', photoSwipe.currSlide!.data.src!)\n          })\n        },\n      })\n    }\n  })\n}\n","import { useEventListener } from '@vueuse/core'\nimport type PhotoSwipe from 'photoswipe'\nimport type { SlideData } from 'photoswipe'\nimport type { PhotoSwipeOptions } from '../helpers/index.js'\nimport { LOADING_ICON } from './icon.js'\nimport { getImageElementInfo } from './images.js'\nimport { initPhotoSwipe } from './initPhotoSwipe.js'\nimport type { PhotoSwipeBehaviorOptions } from './typings.js'\n\nexport const registerPhotoSwipe = (\n  images: HTMLImageElement[],\n  {\n    scrollToClose = true,\n    download = true,\n    fullscreen = true,\n    ...photoSwipeOptions\n  }: PhotoSwipeBehaviorOptions & PhotoSwipeOptions,\n): Promise<() => void> =>\n  import(/* webpackChunkName: \"photo-swipe\" */ 'photoswipe').then(\n    ({ default: PhotoSwipe }) => {\n      let currentPhotoSwipe: PhotoSwipe | null = null\n\n      const dataSource = images.map<SlideData>((image) => ({\n        html: LOADING_ICON,\n        element: image,\n        msrc: image.src,\n      }))\n\n      images.forEach((image, index) => {\n        const handler = (): void => {\n          currentPhotoSwipe?.destroy()\n          currentPhotoSwipe = new PhotoSwipe({\n            preloaderDelay: 0,\n            showHideAnimationType: 'zoom',\n            ...photoSwipeOptions,\n            dataSource,\n            index,\n            ...(scrollToClose\n              ? { closeOnVerticalDrag: true, wheelToZoom: false }\n              : {}),\n          })\n\n          initPhotoSwipe(currentPhotoSwipe, { download, fullscreen })\n\n          currentPhotoSwipe.addFilter('thumbEl', () => image)\n          currentPhotoSwipe.addFilter('placeholderSrc', () => image.src)\n          currentPhotoSwipe.init()\n        }\n\n        if (!image.getAttribute('photo-swipe')) {\n          image.style.cursor = 'zoom-in'\n          image.addEventListener('click', () => {\n            handler()\n          })\n          image.addEventListener('keypress', ({ key }) => {\n            if (key === 'Enter') handler()\n          })\n          // avoid registering multiple times\n          image.setAttribute('photo-swipe', '')\n        }\n\n        void getImageElementInfo(image).then((data) => {\n          dataSource.splice(index, 1, data)\n          currentPhotoSwipe?.refreshSlideContent(index)\n        })\n      })\n\n      return scrollToClose\n        ? useEventListener('wheel', () => {\n            currentPhotoSwipe?.close()\n          })\n        : (): void => {\n            // do nothing\n          }\n    },\n  )\n","import { isString, useLocaleConfig, wait } from '@vuepress/helper/client'\nimport { nextTick, onMounted, onUnmounted, watch } from 'vue'\nimport { usePageData, usePageFrontmatter } from 'vuepress/client'\nimport type { PhotoSwipePluginLocaleData } from '../../shared/index.js'\nimport { usePhotoSwipeOptions } from '../helpers/index.js'\nimport type { PhotoSwipeBehaviorOptions } from '../utils/index.js'\nimport { getImages, registerPhotoSwipe } from '../utils/index.js'\n\nimport 'photoswipe/dist/photoswipe.css'\nimport '../styles/photo-swipe.css'\n\nexport interface UsePhotoSwipeOptions extends PhotoSwipeBehaviorOptions {\n  selector: string[] | string\n  locales: Record<\n    string,\n    Record<`${keyof PhotoSwipePluginLocaleData}Title`, string>\n  >\n  /** @default 500 */\n  delay?: number\n}\n\nexport const usePhotoSwipe = ({\n  selector,\n  locales,\n  delay = 500,\n  download = true,\n  fullscreen = true,\n  scrollToClose = true,\n}: UsePhotoSwipeOptions): void => {\n  const photoSwipeOptions = usePhotoSwipeOptions()\n  const locale = useLocaleConfig(locales)\n  const page = usePageData()\n  const frontmatter = usePageFrontmatter<{ photoSwipe: boolean | string }>()\n\n  let destroy: (() => void) | null = null\n\n  const setupPhotoSwipe = (): void => {\n    const { photoSwipe } = frontmatter.value\n\n    if (photoSwipe !== false)\n      void nextTick()\n        .then(() => wait(delay))\n        .then(async () => {\n          const imageSelector = isString(photoSwipe) ? photoSwipe : selector\n\n          destroy = await registerPhotoSwipe(getImages(imageSelector), {\n            ...photoSwipeOptions.value,\n            ...locale.value,\n            download,\n            fullscreen,\n            scrollToClose,\n          })\n        })\n  }\n\n  onMounted(() => {\n    setupPhotoSwipe()\n\n    watch(\n      () => [page.value.path, photoSwipeOptions.value],\n      () => {\n        destroy?.()\n        setupPhotoSwipe()\n      },\n    )\n  })\n\n  onUnmounted(() => {\n    destroy?.()\n  })\n}\n"],"names":["photoswipeOptions","ref","photoswipeSymbol","definePhotoSwipeConfig","options","isRef","watch","value","isFunction","usePhotoSwipeOptions","inject","injectPhotoSwipeConfig","app","LOADING_ICON","getImages","selector","isString","item","getImageElementInfo","image","resolve","reject","getImageUrlInfo","el","initPhotoSwipe","photoSwipe","download","fullscreen","bullets","prevIndex","i","bullet","event","isSupported","toggle","useFullscreen","registerPhotoSwipe","images","scrollToClose","photoSwipeOptions","PhotoSwipe","currentPhotoSwipe","dataSource","index","handler","key","data","useEventListener","usePhotoSwipe","locales","delay","locale","useLocaleConfig","page","usePageData","frontmatter","usePageFrontmatter","destroy","setupPhotoSwipe","nextTick","wait","imageSelector","onMounted","onUnmounted"],"mappings":"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"}