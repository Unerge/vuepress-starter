{"version":3,"file":"index.js","sources":["../../src/client/utils/createPhotoSwipe.ts"],"sourcesContent":["import { useEventListener } from '@vueuse/core'\nimport type PhotoSwipe from 'photoswipe'\nimport type { SlideData } from 'photoswipe'\nimport type { PhotoSwipeOptions } from '../helpers/index.js'\nimport { LOADING_ICON } from './icon.js'\nimport { getImageUrlInfo } from './images.js'\nimport { initPhotoSwipe } from './initPhotoSwipe.js'\nimport type { PhotoSwipeBehaviorOptions } from './typings.js'\n\nexport interface PhotoSwipeState {\n  open: (index: number) => void\n  close: () => void\n  destroy: () => void\n}\n\nexport const createPhotoSwipe = (\n  images: string[],\n  {\n    scrollToClose = true,\n    download = true,\n    fullscreen = true,\n    ...photoSwipeOptions\n  }: PhotoSwipeBehaviorOptions & PhotoSwipeOptions,\n): Promise<PhotoSwipeState> =>\n  import(/* webpackChunkName: \"photo-swipe\" */ 'photoswipe').then(\n    ({ default: PhotoSwipe }) => {\n      let currentPhotoSwipe: PhotoSwipe | null = null\n\n      const dataSource = images.map<SlideData>((image) => ({\n        html: LOADING_ICON,\n        msrc: image,\n      }))\n\n      images.forEach((image, index) => {\n        void getImageUrlInfo(image).then((data) => {\n          dataSource.splice(index, 1, data)\n          currentPhotoSwipe?.refreshSlideContent(index)\n        })\n      })\n\n      const destroy = useEventListener('wheel', () => {\n        currentPhotoSwipe?.close()\n      })\n\n      return {\n        open: (index: number): void => {\n          currentPhotoSwipe?.close()\n\n          currentPhotoSwipe = new PhotoSwipe({\n            preloaderDelay: 0,\n            showHideAnimationType: 'zoom',\n            ...photoSwipeOptions,\n            dataSource,\n            index,\n            ...(scrollToClose\n              ? { closeOnVerticalDrag: true, wheelToZoom: false }\n              : {}),\n          })\n\n          initPhotoSwipe(currentPhotoSwipe, { download, fullscreen })\n\n          currentPhotoSwipe.addFilter('placeholderSrc', () => images[index])\n          currentPhotoSwipe.init()\n        },\n        close: (): void => {\n          currentPhotoSwipe?.close()\n        },\n        destroy,\n      }\n    },\n  )\n"],"names":["createPhotoSwipe","images","scrollToClose","download","fullscreen","photoSwipeOptions","PhotoSwipe","currentPhotoSwipe","dataSource","image","LOADING_ICON","index","getImageUrlInfo","data","destroy","useEventListener","initPhotoSwipe"],"mappings":"0VAeaA,EAAmB,CAC9BC,EACA,CACE,cAAAC,EAAgB,GAChB,SAAAC,EAAW,GACX,WAAAC,EAAa,GACb,GAAGC,CACL,IAEA,OAA6C,YAAY,EAAE,KACzD,CAAC,CAAE,QAASC,CAAW,IAAM,CAC3B,IAAIC,EAAuC,KAE3C,MAAMC,EAAaP,EAAO,IAAgBQ,IAAW,CACnD,KAAMC,EACN,KAAMD,CACR,EAAE,EAEFR,EAAO,QAAQ,CAACQ,EAAOE,IAAU,CAC1BC,EAAgBH,CAAK,EAAE,KAAMI,GAAS,CACzCL,EAAW,OAAOG,EAAO,EAAGE,CAAI,EAChCN,GAAmB,oBAAoBI,CAAK,CAC9C,CAAC,CACH,CAAC,EAED,MAAMG,EAAUC,EAAiB,QAAS,IAAM,CAC9CR,GAAmB,MAAA,CACrB,CAAC,EAED,MAAO,CACL,KAAOI,GAAwB,CAC7BJ,GAAmB,QAEnBA,EAAoB,IAAID,EAAW,CACjC,eAAgB,EAChB,sBAAuB,OACvB,GAAGD,EACH,WAAAG,EACA,MAAAG,EACA,GAAIT,EACA,CAAE,oBAAqB,GAAM,YAAa,EAAM,EAChD,CAAA,CACN,CAAC,EAEDc,EAAeT,EAAmB,CAAE,SAAAJ,EAAU,WAAAC,CAAW,CAAC,EAE1DG,EAAkB,UAAU,iBAAkB,IAAMN,EAAOU,CAAK,CAAC,EACjEJ,EAAkB,KACpB,CAAA,EACA,MAAO,IAAY,CACjBA,GAAmB,MAAM,CAC3B,EACA,QAAAO,CACF,CACF,CACF"}