import { PhotoSwipeOptions as PhotoSwipeOptions$1, SlideData } from 'photoswipe';
import { MaybeRefOrGetter, Ref, App } from 'vue';
import { ExactLocaleConfig } from '@vuepress/helper';

type PhotoSwipeOptions = Omit<PhotoSwipeOptions$1, 'dataSource' | 'index'>;
declare const definePhotoSwipeConfig: (options: MaybeRefOrGetter<PhotoSwipeOptions>) => void;
declare const usePhotoSwipeOptions: () => Ref<PhotoSwipeOptions>;
declare const injectPhotoSwipeConfig: (app: App) => void;

interface PhotoSwipePluginLocaleData {
    /**
     * Close button label text
     *
     * 关闭按钮标签文字
     */
    close: string;
    /**
     * Download button label text
     *
     * 下载按钮标签文字
     */
    download: string;
    /**
     * Full screen button label text
     *
     * 全屏按钮标签文字
     */
    fullscreen: string;
    /**
     * Zoom button label text
     *
     * 缩放按钮标签文字
     */
    zoom: string;
    /**
     * Previous image button label text
     *
     * 上一张图片按钮标签文字
     */
    arrowPrev: string;
    /**
     * Next image button label text
     *
     * 下一张图片按钮标签文字
     */
    arrowNext: string;
}
type PhotoSwipePluginLocaleConfig = ExactLocaleConfig<PhotoSwipePluginLocaleData>;

interface PhotoSwipeBehaviorOptions {
    download?: boolean;
    fullscreen?: boolean;
    scrollToClose?: boolean;
}

interface PhotoSwipeState {
    open: (index: number) => void;
    close: () => void;
    destroy: () => void;
}
declare const createPhotoSwipe: (images: string[], { scrollToClose, download, fullscreen, ...photoSwipeOptions }: PhotoSwipeBehaviorOptions & PhotoSwipeOptions) => Promise<PhotoSwipeState>;

declare const getImages: (selector: string[] | string) => HTMLImageElement[];
declare const getImageElementInfo: (image: HTMLImageElement) => Promise<SlideData>;
declare const getImageUrlInfo: (image: string) => Promise<SlideData>;

declare const registerPhotoSwipe: (images: HTMLImageElement[], { scrollToClose, download, fullscreen, ...photoSwipeOptions }: PhotoSwipeBehaviorOptions & PhotoSwipeOptions) => Promise<() => void>;

interface UsePhotoSwipeOptions extends PhotoSwipeBehaviorOptions {
    selector: string[] | string;
    locales: Record<string, Record<`${keyof PhotoSwipePluginLocaleData}Title`, string>>;
    /** @default 500 */
    delay?: number;
}
declare const usePhotoSwipe: ({ selector, locales, delay, download, fullscreen, scrollToClose, }: UsePhotoSwipeOptions) => void;

export { type PhotoSwipeBehaviorOptions, type PhotoSwipeOptions, type PhotoSwipePluginLocaleConfig, type PhotoSwipePluginLocaleData, type PhotoSwipeState, type UsePhotoSwipeOptions, createPhotoSwipe, definePhotoSwipeConfig, getImageElementInfo, getImageUrlInfo, getImages, injectPhotoSwipeConfig, registerPhotoSwipe, usePhotoSwipe, usePhotoSwipeOptions };
