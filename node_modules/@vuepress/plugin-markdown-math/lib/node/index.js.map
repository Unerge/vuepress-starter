{"version":3,"file":"index.js","sources":["../../src/node/utils.ts","../../src/node/prepare/prepareClientConfigFile.ts","../../src/node/prepare/prepareMathjaxStyle.ts","../../src/node/markdownMathPlugin.ts"],"sourcesContent":["import { Logger, ensureEndingSlash } from '@vuepress/helper'\nimport { getDirname, path } from 'vuepress/utils'\n\nconst __dirname = getDirname(import.meta.url)\n\nexport const CLIENT_FOLDER = ensureEndingSlash(\n  path.resolve(__dirname, '../client'),\n)\n\nexport const PLUGIN_NAME = '@vuepress/plugin-markdown-math'\n\nexport const logger = new Logger(PLUGIN_NAME)\n","import { getRealPath } from '@vuepress/helper'\nimport type { App } from 'vuepress'\nimport type {\n  MarkdownKatexPluginOptions,\n  MarkdownMathPluginOptions,\n} from '../options.js'\nimport { CLIENT_FOLDER } from '../utils.js'\n\nconst { url } = import.meta\n\nexport const prepareClientConfigFile = async (\n  app: App,\n  mathRenderer: 'katex' | 'mathjax',\n  options: MarkdownMathPluginOptions,\n): Promise<string> => {\n  let content = ''\n\n  if (mathRenderer === 'katex') {\n    content += `\\\nimport \"${getRealPath('katex/dist/katex.min.css', url)}\";\nimport \"${CLIENT_FOLDER}styles/katex.css\";\n${\n  (options as MarkdownKatexPluginOptions).copy\n    ? `\\\nimport { useKatexCopy } from \"${CLIENT_FOLDER}composables/useKatexCopy.js\";\n\nexport default {\n  setup: () => {\n    useKatexCopy();\n  }\n};\n`\n    : ''\n}`\n  } else {\n    content += `\\\nimport './mathjax.css';\n`\n  }\n\n  return app.writeTemp(`markdown-math/config.js`, content)\n}\n","import type { MathjaxInstance } from '@mdit/plugin-mathjax-slim'\nimport type { App } from 'vuepress/core'\n\n// Prevent mathjax breaking mobile layout\nconst MATHJAX_STYLE_PATCH = `\\\nmjx-container {\n  overflow: auto hidden;\n}\n`\n\nexport const prepareMathjaxStyle = async (\n  app: App,\n  mathjaxInstance: MathjaxInstance,\n): Promise<void> => {\n  await app.writeTemp(\n    'markdown-math/mathjax.css',\n    `${mathjaxInstance.outputStyle()}\\n${MATHJAX_STYLE_PATCH}`,\n  )\n}\n","import type { MarkdownItKatexOptions } from '@mdit/plugin-katex-slim'\nimport { katex } from '@mdit/plugin-katex-slim'\nimport type { MathjaxInstance } from '@mdit/plugin-mathjax-slim'\nimport { createMathjaxInstance, mathjax } from '@mdit/plugin-mathjax-slim'\nimport { addCustomElement, getInstalledStatus } from '@vuepress/helper'\nimport type { Plugin } from 'vuepress/core'\nimport type { MarkdownEnv } from 'vuepress/markdown'\nimport { colors, logger } from 'vuepress/utils'\nimport type {\n  MarkdownKatexPluginOptions,\n  MarkdownMathPluginOptions,\n  MarkdownMathjaxPluginOptions,\n} from './options.js'\nimport {\n  prepareClientConfigFile,\n  prepareMathjaxStyle,\n} from './prepare/index.js'\nimport { PLUGIN_NAME } from './utils.js'\n\nexport const markdownMathPlugin = ({\n  type,\n  ...options\n}: MarkdownMathPluginOptions = {}): Plugin => {\n  const isMathjaxInstalled = getInstalledStatus('mathjax-full', import.meta.url)\n  const isKatexInstalled = getInstalledStatus('katex', import.meta.url)\n\n  const mathRenderer =\n    type === 'katex' && isKatexInstalled\n      ? 'katex'\n      : type === 'mathjax' && isMathjaxInstalled\n        ? 'mathjax'\n        : isMathjaxInstalled\n          ? 'mathjax'\n          : isKatexInstalled\n            ? 'katex'\n            : null\n\n  if (!mathRenderer || (type && mathRenderer !== type)) {\n    const packages = { katex: 'katex', mathjax: 'mathjax-full' }\n    logger.error(\n      !mathRenderer\n        ? 'No math renderer found, please install mathjax-full or katex'\n        : `type is \"${type}\", but \"${packages[type!]}\" is not installed`,\n    )\n\n    return {\n      name: PLUGIN_NAME,\n    }\n  }\n\n  const mathjaxInstance =\n    mathRenderer === 'mathjax'\n      ? createMathjaxInstance({\n          ...(options as MarkdownMathjaxPluginOptions),\n          transformer: (content: string) =>\n            content.replace(/^<mjx-container/, '<mjx-container v-pre'),\n        })\n      : null\n\n  return {\n    name: PLUGIN_NAME,\n\n    extendsBundlerOptions: (bundlerOptions, app) => {\n      if (mathRenderer === 'mathjax') {\n        addCustomElement(bundlerOptions, app, /^mjx-/)\n      }\n    },\n\n    extendsMarkdown: (md) => {\n      if (mathRenderer === 'mathjax') {\n        md.use<MathjaxInstance>(mathjax, mathjaxInstance!)\n        // Reset mathjax style in each render\n        md.use((mdIt) => {\n          const originalRender = mdIt.render.bind(mdIt)\n\n          mdIt.render = (src: string, env: unknown): string => {\n            const result = originalRender(src, env)\n\n            mathjaxInstance!.reset()\n\n            return result\n          }\n        })\n      } else {\n        md.use<MarkdownItKatexOptions<MarkdownEnv>>(katex, {\n          logger: (errorCode, errorMsg, token, { filePathRelative }) => {\n            // Ignore this error\n            if (errorCode === 'newLineInDisplayMode') return\n\n            if (errorCode === 'unicodeTextInMathMode')\n              logger.warn(\n                `Found unicode character ${token.text} inside tex${\n                  filePathRelative ? ` in ${colors.cyan(filePathRelative)}` : ''\n                }. You should use ${colors.magenta(`\\\\text{${token.text}}`)}`,\n              )\n            else\n              logger.warn(\n                `${errorMsg}.${\n                  filePathRelative\n                    ? `\\nFound in ${colors.cyan(filePathRelative)}`\n                    : ''\n                }`,\n              )\n          },\n          macros: {},\n          ...(options as Omit<MarkdownKatexPluginOptions, 'type'>),\n          transformer: (content) => content.replace(/^(<[a-z]+ )/g, '$1v-pre '),\n        })\n      }\n    },\n\n    onPrepared: async (app) => {\n      if (mathRenderer === 'mathjax') {\n        await prepareMathjaxStyle(app, mathjaxInstance!)\n      }\n    },\n\n    clientConfigFile: (app) =>\n      prepareClientConfigFile(app, mathRenderer, options),\n  }\n}\n"],"names":["__dirname","getDirname","CLIENT_FOLDER","ensureEndingSlash","path","PLUGIN_NAME","Logger","url","prepareClientConfigFile","app","mathRenderer","options","content","getRealPath","MATHJAX_STYLE_PATCH","prepareMathjaxStyle","mathjaxInstance","markdownMathPlugin","type","isMathjaxInstalled","getInstalledStatus","isKatexInstalled","packages","logger","createMathjaxInstance","bundlerOptions","addCustomElement","md","mathjax","mdIt","originalRender","src","env","result","katex","errorCode","errorMsg","token","filePathRelative","colors"],"mappings":"6UAGA,MAAMA,EAAYC,EAAW,YAAY,GAAG,EAE/BC,EAAgBC,EAC3BC,EAAK,QAAQJ,EAAW,WAAW,CACrC,EAEaK,EAAc,iCAEL,IAAIC,EAAOD,CAAW,ECH5C,KAAM,CAAE,IAAAE,CAAI,EAAI,YAEHC,EAA0B,MACrCC,EACAC,EACAC,IACoB,CACpB,IAAIC,EAAU,GAEd,OAAIF,IAAiB,QACnBE,GAAW,WACLC,EAAY,2BAA4BN,CAAG,CAAC;AAAA,UAC5CL,CAAa;AAAA,EAEpBS,EAAuC,KACpC,iCAC0BT,CAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQvC,EACN,GAEIU,GAAW;AAAA,EAKNH,EAAI,UAAU,0BAA2BG,CAAO,CACzD,ECrCME,EAAsB;AAAA;AAAA;AAAA,EAMfC,EAAsB,MACjCN,EACAO,IACkB,CAClB,MAAMP,EAAI,UACR,4BACA,GAAGO,EAAgB,aAAa;AAAA,EAAKF,CAAmB,EAC1D,CACF,ECCaG,EAAqB,CAAC,CACjC,KAAAC,EACA,GAAGP,CACL,EAA+B,CAAA,IAAe,CAC5C,MAAMQ,EAAqBC,EAAmB,eAAgB,YAAY,GAAG,EACvEC,EAAmBD,EAAmB,QAAS,YAAY,GAAG,EAE9DV,EACJQ,IAAS,SAAWG,EAChB,QACAH,IAAS,WAAaC,GAEpBA,EADA,UAGEE,EACE,QACA,KAEZ,GAAI,CAACX,GAAiBQ,GAAQR,IAAiBQ,EAAO,CACpD,MAAMI,EAAW,CAAE,MAAO,QAAS,QAAS,cAAe,EAC3D,OAAAC,EAAO,MACJb,EAEG,YAAYQ,CAAI,WAAWI,EAASJ,CAAK,CAAC,qBAD1C,8DAEN,EAEO,CACL,KAAMb,CACR,CACF,CAEA,MAAMW,EACJN,IAAiB,UACbc,EAAsB,CACpB,GAAIb,EACJ,YAAcC,GACZA,EAAQ,QAAQ,kBAAmB,sBAAsB,CAC7D,CAAC,EACD,KAEN,MAAO,CACL,KAAMP,EAEN,sBAAuB,CAACoB,EAAgBhB,IAAQ,CAC1CC,IAAiB,WACnBgB,EAAiBD,EAAgBhB,EAAK,OAAO,CAEjD,EAEA,gBAAkBkB,GAAO,CACnBjB,IAAiB,WACnBiB,EAAG,IAAqBC,EAASZ,CAAgB,EAEjDW,EAAG,IAAKE,GAAS,CACf,MAAMC,EAAiBD,EAAK,OAAO,KAAKA,CAAI,EAE5CA,EAAK,OAAS,CAACE,EAAaC,IAAyB,CACnD,MAAMC,EAASH,EAAeC,EAAKC,CAAG,EAEtC,OAAAhB,EAAiB,QAEViB,CACT,CACF,CAAC,GAEDN,EAAG,IAAyCO,EAAO,CACjD,OAAQ,CAACC,EAAWC,EAAUC,EAAO,CAAE,iBAAAC,CAAiB,IAAM,CAExDH,IAAc,yBAEdA,IAAc,wBAChBZ,EAAO,KACL,2BAA2Bc,EAAM,IAAI,cACnCC,EAAmB,OAAOC,EAAO,KAAKD,CAAgB,CAAC,GAAK,EAC9D,oBAAoBC,EAAO,QAAQ,UAAUF,EAAM,IAAI,GAAG,CAAC,EAC7D,EAEAd,EAAO,KACL,GAAGa,CAAQ,IACTE,EACI;AAAA,WAAcC,EAAO,KAAKD,CAAgB,CAAC,GAC3C,EACN,EACF,EACJ,EACA,OAAQ,CAAA,EACR,GAAI3B,EACJ,YAAcC,GAAYA,EAAQ,QAAQ,eAAgB,UAAU,CACtE,CAAC,CAEL,EAEA,WAAY,MAAOH,GAAQ,CACrBC,IAAiB,WACnB,MAAMK,EAAoBN,EAAKO,CAAgB,CAEnD,EAEA,iBAAmBP,GACjBD,EAAwBC,EAAKC,EAAcC,CAAO,CACtD,CACF"}