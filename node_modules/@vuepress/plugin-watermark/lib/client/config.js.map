{"version":3,"file":"config.js","sources":["../../src/client/config.ts"],"sourcesContent":["import { isPlainObject } from '@vuepress/helper/client'\nimport { computed } from 'vue'\nimport { defineClientConfig, usePageFrontmatter } from 'vuepress/client'\nimport type { WatermarkPluginFrontmatter } from '../shared/options.js'\nimport { setupWatermark } from './composables/index.js'\nimport type { WatermarkOptions } from './helper/index.js'\nimport { injectWatermarkConfig, useWatermarkOptions } from './helper/index.js'\n\ndeclare const __WM_DELAY__: number\ndeclare const __WM_GLOBAL__: boolean\ndeclare const __WM_OPTIONS__: WatermarkOptions\n\nexport default defineClientConfig({\n  enhance({ app }) {\n    injectWatermarkConfig(app)\n  },\n\n  setup() {\n    if (__VUEPRESS_SSR__) return\n\n    const frontmatter = usePageFrontmatter<WatermarkPluginFrontmatter>()\n    const watermarkOptions = useWatermarkOptions(\n      computed(() => {\n        const { watermark } = frontmatter.value\n        return isPlainObject(watermark) ? {} : __WM_OPTIONS__\n      }),\n    )\n\n    const enabled = computed(() => {\n      const { watermark } = frontmatter.value\n\n      return Boolean(watermark ?? __WM_GLOBAL__)\n    })\n\n    setupWatermark(watermarkOptions, enabled, __WM_DELAY__)\n  },\n})\n"],"names":["defineClientConfig","app","injectWatermarkConfig","frontmatter","usePageFrontmatter","watermarkOptions","useWatermarkOptions","computed","watermark","isPlainObject","enabled","setupWatermark"],"mappings":"8RAYA,IAAeA,EAAAA,EAAmB,CAChC,QAAQ,CAAE,IAAAC,CAAI,EAAG,CACfC,EAAsBD,CAAG,CAC3B,EAEA,OAAQ,CACN,GAAI,iBAAkB,OAEtB,MAAME,EAAcC,EAA+C,EAC7DC,EAAmBC,EACvBC,EAAS,IAAM,CACb,KAAM,CAAE,UAAAC,CAAU,EAAIL,EAAY,MAClC,OAAOM,EAAcD,CAAS,EAAI,GAAK,cACzC,CAAC,CACH,EAEME,EAAUH,EAAS,IAAM,CAC7B,KAAM,CAAE,UAAAC,CAAU,EAAIL,EAAY,MAElC,MAAO,CAAA,EAAQK,GAAa,cAC9B,CAAC,EAEDG,EAAeN,EAAkBK,EAAS,YAAY,CACxD,CACF,CAAC"}