{"version":3,"file":"index.js","sources":["../../src/node/logger.ts","../../src/node/watermarkPlugin.ts"],"sourcesContent":["import { Logger } from '@vuepress/helper'\n\nexport const PLUGIN_NAME = '@vuepress/plugin-watermark'\n\nexport const logger = new Logger(PLUGIN_NAME)\n","import type { Plugin } from 'vuepress/core'\nimport { isFunction } from 'vuepress/shared'\nimport { getDirname, path } from 'vuepress/utils'\nimport { PLUGIN_NAME, logger } from './logger.js'\nimport type { WatermarkPluginOptions } from './options.js'\n\nconst __dirname = getDirname(import.meta.url)\n\nexport const watermarkPlugin =\n  ({ enabled = true, ...options }: WatermarkPluginOptions = {}): Plugin =>\n  (app) => {\n    if (app.env.isDebug) logger.info('Options:', options)\n\n    return {\n      name: PLUGIN_NAME,\n\n      define: {\n        __WM_DELAY__: options.delay ?? 500,\n        __WM_GLOBAL__: enabled === true,\n        __WM_OPTIONS__: options.watermarkOptions ?? {},\n      },\n\n      extendsPage: (page) => {\n        // When watermark is a filter function, enable watermark for matching pages.\n        if (isFunction(enabled)) {\n          const { frontmatter } = page\n\n          if (!('watermark' in frontmatter) && enabled(page)) {\n            frontmatter.watermark = true\n          }\n        }\n      },\n\n      clientConfigFile: path.resolve(__dirname, '../client/config.js'),\n    }\n  }\n"],"names":["PLUGIN_NAME","logger","Logger","__dirname","getDirname","watermarkPlugin","enabled","options","app","page","isFunction","frontmatter","path"],"mappings":"6IAEO,MAAMA,EAAc,6BAEdC,EAAS,IAAIC,EAAOF,CAAW,ECEtCG,EAAYC,EAAW,YAAY,GAAG,EAE/BC,EACX,CAAC,CAAE,QAAAC,EAAU,GAAM,GAAGC,CAAQ,EAA4B,CAAA,IACzDC,IACKA,EAAI,IAAI,SAASP,EAAO,KAAK,WAAYM,CAAO,EAE7C,CACL,KAAMP,EAEN,OAAQ,CACN,aAAcO,EAAQ,OAAS,IAC/B,cAAeD,IAAY,GAC3B,eAAgBC,EAAQ,kBAAoB,CAC9C,CAAA,EAEA,YAAcE,GAAS,CAErB,GAAIC,EAAWJ,CAAO,EAAG,CACvB,KAAM,CAAE,YAAAK,CAAY,EAAIF,EAEpB,EAAE,cAAeE,IAAgBL,EAAQG,CAAI,IAC/CE,EAAY,UAAY,GAE5B,CACF,EAEA,iBAAkBC,EAAK,QAAQT,EAAW,qBAAqB,CACjE"}