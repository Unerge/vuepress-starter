{"version":3,"file":"index.js","sources":["../../src/client/composables/useDocSearchHotkeyListener.ts","../../src/client/composables/useDocSearchSlim.ts","../../src/client/helpers/docsearch.ts","../../src/client/utils/getFacetFilters.ts","../../src/client/utils/getSearchButtonTemplate.ts","../../src/client/utils/pollToOpenDocSearch.ts","../../src/client/utils/preconnectToAlgolia.ts","../../src/client/components/DocSearch.ts"],"sourcesContent":["import { useEventListener } from '@vueuse/core'\n\n/**\n * Add hotkey listener, remove it after triggered\n */\nexport const useDocSearchHotkeyListener = (callback: () => void): void => {\n  const remove = useEventListener('keydown', (event) => {\n    const isHotKeyBind = event.key === 'k' && (event.ctrlKey || event.metaKey)\n    const isSlashKey = event.key === '/'\n\n    if (!isSlashKey && !isHotKeyBind) {\n      return\n    }\n\n    event.preventDefault()\n    callback()\n    remove()\n  })\n}\n","import type { DocSearchProps } from '@docsearch/react'\nimport { debounce } from 'ts-debounce'\nimport { useRouter } from 'vuepress/client'\nimport { removeLeadingSlash, resolveRoutePathFromUrl } from 'vuepress/shared'\n\ndeclare const __DOCSEARCH_INDEX_BASE__: string\n\nconst isSpecialClick = (event: MouseEvent): boolean =>\n  event.button === 1 ||\n  event.altKey ||\n  event.ctrlKey ||\n  event.metaKey ||\n  event.shiftKey\n\n/**\n * Get docsearch options to be compatible with VuePress\n */\nexport const useDocSearchShim = (): Partial<DocSearchProps> => {\n  const router = useRouter()\n\n  return {\n    // convert item url to pathname of current site\n    transformItems: (items) =>\n      items.map((item) => ({\n        ...item,\n        url: `${\n          // append current base\n          __VUEPRESS_BASE__\n        }${removeLeadingSlash(\n          // get route path\n          resolveRoutePathFromUrl(item.url, __DOCSEARCH_INDEX_BASE__),\n        )}`,\n      })),\n\n    // render the hit component with custom `onClick` handler\n    hitComponent: ({ hit, children }) =>\n      ({\n        type: 'a',\n        ref: undefined,\n        constructor: undefined,\n        key: undefined,\n        props: {\n          href: hit.url,\n          // handle `onClick` by `router.push`\n          onClick: (event: MouseEvent) => {\n            if (isSpecialClick(event)) {\n              return\n            }\n            event.preventDefault()\n            router.push(hit.url.replace(__VUEPRESS_BASE__, '/'))\n          },\n          children: children as unknown,\n        },\n        __v: null,\n      }) as unknown,\n\n    // navigation behavior triggered by `onKeyDown` internally\n    navigator: {\n      // when pressing Enter without metaKey\n      navigate: ({ itemUrl }) => {\n        router.push(itemUrl.replace(__VUEPRESS_BASE__, '/'))\n      },\n    },\n\n    // add search debounce\n    transformSearchClient: (searchClient) => {\n      const searchWithDebounce = debounce(searchClient.search, 500)\n      return {\n        ...searchClient,\n        search: async (...args) => searchWithDebounce(...args),\n      }\n    },\n  } as Partial<DocSearchProps>\n}\n","import type { DocSearchProps } from '@docsearch/react'\nimport { deepAssign, isFunction } from '@vuepress/helper/client'\nimport type { App, ComputedRef, InjectionKey, MaybeRefOrGetter, Ref } from 'vue'\nimport { computed, inject, isRef, ref, watch } from 'vue'\nimport { useRouteLocale } from 'vuepress/client'\nimport type { DocSearchOptions } from '../../shared/index.js'\n\ndeclare const __VUEPRESS_DEV__: boolean\ndeclare const __DOCSEARCH_OPTIONS__: DocSearchOptions\n\nconst docSearchOptions: Partial<DocSearchProps> = __DOCSEARCH_OPTIONS__\n\nconst docsearch: Ref<DocSearchProps> = ref(docSearchOptions as DocSearchProps)\n\nconst docsearchSymbol: InjectionKey<\n  Ref<\n    DocSearchProps & {\n      locales?: Record<string, DocSearchProps>\n    }\n  >\n> = Symbol(__VUEPRESS_DEV__ ? 'docsearch' : '')\n\nexport type DocSearchClientLocaleOptions = Partial<DocSearchProps>\n\nexport interface DocSearchClientOptions extends DocSearchClientLocaleOptions {\n  locales?: Record<string, DocSearchClientLocaleOptions>\n}\n\nexport const defineDocSearchConfig = (\n  options: MaybeRefOrGetter<DocSearchClientOptions>,\n): void => {\n  if (isRef(options)) {\n    watch(\n      () => options.value,\n      (value) => {\n        docsearch.value = deepAssign({}, docSearchOptions, value)\n      },\n    )\n  } else if (isFunction(options)) {\n    watch(options, (value) => {\n      docsearch.value = deepAssign({}, docSearchOptions, value)\n    })\n  } else {\n    docsearch.value = deepAssign({}, docSearchOptions, options)\n  }\n}\n\nexport const useDocSearchOptions = (): ComputedRef<DocSearchProps> => {\n  const options = inject(docsearchSymbol)!\n  const routeLocale = useRouteLocale()\n\n  return computed(() => ({\n    ...options.value,\n    ...options.value.locales?.[routeLocale.value],\n  }))\n}\n\nexport const injectDocSearchConfig = (app: App): void => {\n  app.provide(docsearchSymbol, docsearch)\n}\n","import type { DocSearchOptions } from '../../shared/index.js'\n\ntype FacetFilters =\n  Required<DocSearchOptions>['searchParameters']['facetFilters']\n\n/**\n * Get facet filters for current lang\n */\nexport const getFacetFilters = (\n  lang: string,\n  rawFacetFilters: FacetFilters = [],\n): FacetFilters => [\n  `lang:${lang}`,\n  ...((Array.isArray(rawFacetFilters)\n    ? rawFacetFilters\n    : [rawFacetFilters]) as string[]),\n]\n","import type { DocSearchTranslations } from '@docsearch/react'\n\n/**\n * Get the search button template\n *\n * Use the same content as in @docsearch/js\n *\n * TODO: the meta key text should also be dynamic\n */\nexport const getSearchButtonTemplate = ({\n  buttonText = 'Search',\n  buttonAriaLabel = buttonText,\n}: DocSearchTranslations['button'] = {}): string =>\n  `<button type=\"button\" class=\"DocSearch DocSearch-Button\" aria-label=\"${buttonAriaLabel}\"><span class=\"DocSearch-Button-Container\"><svg width=\"20\" height=\"20\" class=\"DocSearch-Search-Icon\" viewBox=\"0 0 20 20\"><path d=\"M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z\" stroke=\"currentColor\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg><span class=\"DocSearch-Button-Placeholder\">${buttonText}</span></span><span class=\"DocSearch-Button-Keys\"><kbd class=\"DocSearch-Button-Key\"><svg width=\"15\" height=\"15\" class=\"DocSearch-Control-Key-Icon\"><path d=\"M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953\" stroke-width=\"1.2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"square\"></path></svg></kbd><kbd class=\"DocSearch-Button-Key\">K</kbd></span></button>`\n","const POLL_INTERVAL = 16\n\n/**\n * Programmatically open the docsearch modal\n */\nexport const pollToOpenDocSearch = (): void => {\n  if (document.querySelector('.DocSearch-Modal')) return\n  const e = new Event('keydown') as {\n    -readonly [P in keyof KeyboardEvent]: KeyboardEvent[P]\n  }\n  e.key = 'k'\n  e.metaKey = true\n  window.dispatchEvent(e)\n  setTimeout(pollToOpenDocSearch, POLL_INTERVAL)\n}\n","/**\n * Preconnect to Algolia's API\n */\nexport const preconnectToAlgolia = (appId: string): void => {\n  const id = 'algolia-preconnect'\n  const rIC =\n    'requestIdleCallback' in window ? window.requestIdleCallback : setTimeout\n\n  rIC(() => {\n    if (document.head.querySelector(`#${id}`)) return\n    const preconnect = document.createElement('link')\n    preconnect.id = id\n    preconnect.rel = 'preconnect'\n    preconnect.href = `https://${appId}-dsn.algolia.net`\n    preconnect.crossOrigin = ''\n    document.head.appendChild(preconnect)\n  })\n}\n","import type { PropType } from 'vue'\nimport { computed, defineComponent, h, onMounted, ref, watch } from 'vue'\nimport { usePageLang, useRouteLocale } from 'vuepress/client'\nimport type { DocSearchOptions } from '../../shared/index.js'\nimport {\n  useDocSearchHotkeyListener,\n  useDocSearchShim,\n} from '../composables/index.js'\nimport { useDocSearchOptions } from '../helpers/index.js'\nimport {\n  getFacetFilters,\n  getSearchButtonTemplate,\n  pollToOpenDocSearch,\n  preconnectToAlgolia,\n} from '../utils/index.js'\n\nexport const DocSearch = defineComponent({\n  name: 'DocSearch',\n\n  props: {\n    containerId: {\n      type: String,\n      default: 'docsearch-container',\n    },\n    options: {\n      type: Object as PropType<DocSearchOptions>,\n      default: () => ({}),\n    },\n  },\n\n  setup(props) {\n    const docSearchOptions = useDocSearchOptions()\n    const docsearchShim = useDocSearchShim()\n    const lang = usePageLang()\n    const routeLocale = useRouteLocale()\n\n    const hasInitialized = ref(false)\n    const hasTriggered = ref(false)\n\n    // resolve docsearch options for current locale\n    const options = computed(() => {\n      const { locales = {}, ...rest } = props.options\n\n      return {\n        ...docSearchOptions.value,\n        ...rest,\n        ...locales[routeLocale.value],\n      }\n    })\n\n    /**\n     * Import docsearch js and initialize\n     */\n    const initialize = async (): Promise<void> => {\n      const { default: docsearch } = await import('@docsearch/js')\n      docsearch({\n        ...docsearchShim,\n        ...options.value,\n        container: `#${props.containerId}`,\n        searchParameters: {\n          ...options.value.searchParameters,\n          facetFilters: getFacetFilters(\n            lang.value,\n            options.value.searchParameters?.facetFilters,\n          ),\n        },\n      })\n      // mark as initialized\n      hasInitialized.value = true\n    }\n\n    /**\n     * Trigger docsearch initialization and open it\n     */\n    const trigger = (): void => {\n      if (hasTriggered.value || hasInitialized.value) return\n      // mark as triggered\n      hasTriggered.value = true\n      // initialize and open\n      void initialize()\n      pollToOpenDocSearch()\n      // re-initialize when route locale changes\n      watch(routeLocale, initialize)\n    }\n\n    // trigger when hotkey is pressed\n    useDocSearchHotkeyListener(trigger)\n\n    // preconnect to algolia\n    onMounted(() => {\n      preconnectToAlgolia(options.value.appId)\n    })\n\n    return () => [\n      h('div', {\n        id: props.containerId,\n        style: { display: hasInitialized.value ? 'block' : 'none' },\n      }),\n      hasInitialized.value\n        ? null\n        : h('div', {\n            onClick: trigger,\n            innerHTML: getSearchButtonTemplate(\n              options.value.translations?.button,\n            ),\n          }),\n    ]\n  },\n})\n"],"names":["useDocSearchHotkeyListener","callback","remove","useEventListener","event","isHotKeyBind","isSpecialClick","useDocSearchShim","router","useRouter","items","item","removeLeadingSlash","resolveRoutePathFromUrl","hit","children","itemUrl","searchClient","searchWithDebounce","debounce","args","docSearchOptions","docsearch","ref","docsearchSymbol","defineDocSearchConfig","options","isRef","watch","value","deepAssign","isFunction","useDocSearchOptions","inject","routeLocale","useRouteLocale","computed","injectDocSearchConfig","app","getFacetFilters","lang","rawFacetFilters","getSearchButtonTemplate","buttonText","buttonAriaLabel","pollToOpenDocSearch","preconnectToAlgolia","appId","id","preconnect","DocSearch","defineComponent","props","docsearchShim","usePageLang","hasInitialized","hasTriggered","locales","rest","initialize","trigger","onMounted","h"],"mappings":"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"}