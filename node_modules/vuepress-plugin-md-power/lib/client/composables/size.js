// src/client/composables/size.ts
import { useEventListener } from "@vueuse/core";
import { computed, isRef, onMounted, ref, shallowRef, toValue, watch } from "vue";
function useSize(options, extraHeight = 0) {
  const el = shallowRef();
  const width = computed(() => toValue(options.width) || "100%");
  const height = ref("auto");
  const getHeight = (width2) => {
    const height2 = toValue(options.height);
    const ratio = getRadio(toValue(options.ratio));
    return height2 || `${Number(width2) / ratio + toValue(extraHeight)}px`;
  };
  const resize = () => {
    if (el.value)
      height.value = getHeight(el.value.offsetWidth);
  };
  onMounted(() => {
    resize();
    if (isRef(extraHeight))
      watch(extraHeight, resize);
    useEventListener("orientationchange", resize);
    useEventListener("resize", resize);
  });
  return { el, width, height, resize };
}
function getRadio(ratio) {
  if (typeof ratio === "string") {
    const [width, height] = ratio.split(":");
    const parsedRadio = Number(width) / Number(height);
    if (!Number.isNaN(parsedRadio))
      return parsedRadio;
  }
  return typeof ratio === "number" ? ratio : 16 / 9;
}
export {
  useSize
};
