const g=(e,s,p)=>{let n;const a=s,r={ok:!1,pos:s,value:""};for(n=e.charAt(s);s<p&&/\d/.test(n)||n==="%";)n=e.charAt(++s);return r.ok=!0,r.pos=s,r.value=e.slice(a,s),r},k=(e,s,p)=>{const n={ok:!1,pos:0,width:"",height:""};if(s>=p||e.charAt(s)!=="=")return n;s++;const a=e.charAt(s);if(a!=="x"&&!/\d/.test(a))return n;const r=g(e,s,p);if(s=r.pos,e.charAt(s)!=="x")return n;s++;const i=g(e,s,p);return s=i.pos,n.width=r.value,n.height=i.value,n.pos=s,n.ok=!0,n},x=(e,s)=>{const p=e.env,n=e.pos,a=e.posMax;if(e.src.charAt(e.pos)!=="!"||e.src.charAt(e.pos+1)!=="[")return!1;const r=e.pos+2,i=e.md.helpers.parseLinkLabel(e,e.pos+1,!1);if(i<0)return!1;let t=i+1,o,h="",l="",m="",d="";if(t<a&&e.src.charAt(t)==="("){for(t++;t<a&&(o=e.src.charAt(t),!(o!==" "&&o!=="	"));)t++;if(t>=a)return!1;let c;c=e.md.helpers.parseLinkDestination(e.src,t,e.posMax),c.ok&&(h=e.md.normalizeLink(c.str),e.md.validateLink(h)?t=c.pos:h="");const f=t;for(;t<a&&(o=e.src.charAt(t),!(o!==" "&&o!=="	"));t++);if(c=e.md.helpers.parseLinkTitle(e.src,t,e.posMax),t<a&&f!==t&&c.ok)for(l=c.str,t=c.pos;t<a&&(o=e.src.charAt(t),!(o!==" "&&o!=="	"));t++);else l="";if(t-1>=0&&(o=e.src.charAt(t-1),o===" "&&(c=k(e.src,t,e.posMax),c.ok)))for(m=c.width,d=c.height,t=c.pos;t<a&&(o=e.src.charAt(t),!(o!==" "&&o!==`
`));t++);if(t>=a||e.src.charAt(t)!==")")return e.pos=n,!1;t++}else{let c="";if(typeof p.references>"u")return!1;for(;t<a&&(o=e.src.charAt(t),!(o!==" "&&o!=="	"));t++);if(t<a&&e.src.charAt(t)==="["){const u=t+1;t=e.md.helpers.parseLinkLabel(e,t),t>=0?c=e.src.slice(u,t++):t=i+1}else t=i+1;c||(c=e.src.slice(r,i));const f=p.references[e.md.utils.normalizeReference(c)];if(!f)return e.pos=n,!1;h=f.href,l=f.title??""}if(!s){e.pos=r,e.posMax=i;const c=e.src.slice(r,i),f=[];e.md.inline.parse(c,e.md,e.env,f);const u=e.push("image","img",0);u.attrs=[["src",h],["alt",""]],l&&u.attrs.push(["title",l]),m&&u.attrs.push(["width",m]),d&&u.attrs.push(["height",d]),u.children=f,u.content=c}return e.pos=t,e.posMax=a,!0},L=e=>{e.inline.ruler.before("emphasis","image",x)},A=e=>{const s=e.renderer.rules.image;e.renderer.rules.image=(p,n,a,r,i)=>{const t=p[n],o=t.children?.[0]?.content;if(o){const h=/^(.*)\|(\d*)(?:x(\d*))?$/.exec(o);if(h){const[,l,m,d]=h;t.content=l,t.children[0].content=l,t.attrSet("width",m),typeof d=="string"&&t.attrSet("height",d)}}return s(p,n,a,r,i)}};export{L as imgSize,A as obsidianImageSize,A as obsidianImgSize};
//# sourceMappingURL=index.js.map
