{"version":3,"file":"index.js","sources":["../src/plugin.ts"],"sourcesContent":["/**\n * Forked from https://github.com/tani/markdown-it-mathjax3/blob/master/index.ts\n */\n\n/* eslint-disable @typescript-eslint/consistent-type-imports */\nimport { createRequire } from \"node:module\";\n\nimport { tex } from \"@mdit/plugin-tex\";\nimport type { PluginWithOptions } from \"markdown-it\";\nimport type { LiteDocument } from \"mathjax-full/js/adaptors/lite/Document.js\";\nimport type {\n  LiteElement,\n  LiteNode,\n} from \"mathjax-full/js/adaptors/lite/Element.js\";\nimport type { LiteText } from \"mathjax-full/js/adaptors/lite/Text.js\";\nimport type { LiteAdaptor } from \"mathjax-full/js/adaptors/liteAdaptor.js\";\nimport type { MathDocument } from \"mathjax-full/js/core/MathDocument.js\";\nimport type { TeX as TeXType } from \"mathjax-full/js/input/tex.js\";\nimport type { CHTML as CHTMLType } from \"mathjax-full/js/output/chtml.js\";\nimport type { SVG as SVGType } from \"mathjax-full/js/output/svg.js\";\nimport path from \"upath\";\n\nimport type { MarkdownItMathjaxOptions, TeXTransformer } from \"./options.js\";\n\nconst require = createRequire(import.meta.url);\n\nlet isMathJaxFullInstalled = true;\nlet mathjaxLib: typeof import(\"mathjax-full/js/mathjax.js\").mathjax;\nlet AllPackages: typeof import(\"mathjax-full/js/input/tex/AllPackages.js\").AllPackages;\nlet TeX: typeof import(\"mathjax-full/js/input/tex.js\").TeX;\nlet CHTML: typeof import(\"mathjax-full/js/output/chtml.js\").CHTML;\nlet SVG: typeof import(\"mathjax-full/js/output/svg.js\").SVG;\nlet liteAdaptor: typeof import(\"mathjax-full/js/adaptors/liteAdaptor.js\").liteAdaptor;\nlet RegisterHTMLHandler: typeof import(\"mathjax-full/js/handlers/html.js\").RegisterHTMLHandler;\nlet AssistiveMmlHandler: typeof import(\"mathjax-full/js/a11y/assistive-mml.js\").AssistiveMmlHandler;\n\ntry {\n  ({ mathjax: mathjaxLib } = await import(\"mathjax-full/js/mathjax.js\"));\n  ({ AllPackages } = await import(\"mathjax-full/js/input/tex/AllPackages.js\"));\n  ({ TeX } = await import(\"mathjax-full/js/input/tex.js\"));\n  ({ CHTML } = await import(\"mathjax-full/js/output/chtml.js\"));\n  ({ SVG } = await import(\"mathjax-full/js/output/svg.js\"));\n  ({ liteAdaptor } = await import(\"mathjax-full/js/adaptors/liteAdaptor.js\"));\n  ({ RegisterHTMLHandler } = await import(\"mathjax-full/js/handlers/html.js\"));\n  ({ AssistiveMmlHandler } = await import(\n    \"mathjax-full/js/a11y/assistive-mml.js\"\n  ));\n} catch {\n  isMathJaxFullInstalled = false;\n}\n\nexport interface DocumentOptions {\n  InputJax: TeXType<LiteElement, string, HTMLElement>;\n  OutputJax:\n    | CHTMLType<LiteElement, string, HTMLElement>\n    | SVGType<LiteElement, string, HTMLElement>;\n  enableAssistiveMml: boolean;\n}\n\nexport const getDocumentOptions = (\n  options: MarkdownItMathjaxOptions,\n): DocumentOptions | null => {\n  if (!isMathJaxFullInstalled) {\n    console.error('[@mdit/mathjax] \"mathjax-full\" is not installed!');\n\n    return null;\n  }\n\n  return {\n    InputJax: new TeX<LiteElement, string, HTMLElement>({\n      packages: AllPackages,\n      ...options.tex,\n    }),\n    OutputJax:\n      options.output === \"chtml\"\n        ? new CHTML<LiteElement, string, HTMLElement>({\n            fontURL: path.dirname(\n              require.resolve(\n                \"mathjax-full/es5/output/chtml/fonts/woff-v2/MathJax_Zero.woff\",\n              ),\n            ),\n            adaptiveCSS: true,\n            ...options.chtml,\n          })\n        : new SVG<LiteElement, string, HTMLElement>({\n            fontCache: \"none\",\n            ...options.svg,\n          }),\n    enableAssistiveMml: options.a11y !== false,\n  };\n};\n\n/**\n * Mathjax instance\n */\nexport interface MathjaxInstance\n  extends Required<\n    Pick<MarkdownItMathjaxOptions, \"allowInlineWithSpace\" | \"mathFence\">\n  > {\n  /**\n   * Mathjax adaptor\n   */\n  adaptor: LiteAdaptor;\n\n  /**\n   * Mathjax document options\n   */\n  documentOptions: DocumentOptions;\n\n  /**\n   * Clear style cache\n   */\n  clearStyle: () => void;\n\n  /**\n   * Output style for rendered content and clears it\n   *\n   * @returns style\n   */\n  outputStyle: () => string;\n\n  /**\n   * Reset tex (including labels)\n   */\n  reset: () => void;\n\n  /**\n   * Output content transformer\n   */\n  transformer: TeXTransformer | null;\n}\n\nexport const createMathjaxInstance = (\n  options: MarkdownItMathjaxOptions = {},\n): MathjaxInstance | null => {\n  const documentOptions = getDocumentOptions(options);\n\n  if (!documentOptions) return null;\n\n  const { OutputJax, InputJax } = documentOptions;\n\n  const adaptor = liteAdaptor();\n  const handler = RegisterHTMLHandler(adaptor);\n\n  if (options.a11y !== false)\n    AssistiveMmlHandler<LiteNode, LiteText, LiteDocument>(handler);\n\n  const clearStyle = (): void => {\n    // clear style cache\n    if (OutputJax instanceof CHTML) OutputJax.clearCache();\n  };\n\n  const reset = (): void => {\n    InputJax.reset();\n  };\n\n  const outputStyle = (): string => {\n    const style = adaptor.innerHTML(\n      OutputJax.styleSheet(\n        mathjaxLib.document(\"\", documentOptions) as MathDocument<\n          LiteElement,\n          string,\n          HTMLElement\n        >,\n      ),\n    );\n\n    clearStyle();\n\n    return style;\n  };\n\n  return {\n    adaptor,\n    documentOptions,\n    allowInlineWithSpace: options.allowInlineWithSpace ?? false,\n    mathFence: options.mathFence ?? false,\n    clearStyle,\n    reset,\n    outputStyle,\n    transformer: options.transformer ?? null,\n  };\n};\n\nexport const mathjax: PluginWithOptions<MathjaxInstance> = (md, instance) => {\n  const {\n    allowInlineWithSpace,\n    adaptor,\n    documentOptions,\n    mathFence,\n    transformer,\n  } = instance!;\n\n  md.use(tex, {\n    allowInlineWithSpace,\n    mathFence,\n    render: (content, displayMode) => {\n      const mathDocument = mathjaxLib\n        .document(content, documentOptions)\n        .convert(content, {\n          display: displayMode,\n        }) as LiteElement;\n\n      const result = adaptor.outerHTML(mathDocument);\n\n      return transformer?.(result, displayMode) ?? result;\n    },\n  });\n};\n"],"names":["require","createRequire","isMathJaxFullInstalled","mathjaxLib","AllPackages","TeX","CHTML","SVG","liteAdaptor","RegisterHTMLHandler","AssistiveMmlHandler","getDocumentOptions","options","path","createMathjaxInstance","documentOptions","OutputJax","InputJax","adaptor","handler","clearStyle","reset","outputStyle","style","mathjax","md","instance","allowInlineWithSpace","mathFence","transformer","tex","content","displayMode","mathDocument","result"],"mappings":"wGAwBA,MAAMA,EAAUC,EAAc,YAAY,GAAG,EAE7C,IAAIC,EAAyB,GACzBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAI,EACD,CAAE,QAASP,CAAW,EAAI,KAAM,QAAO,4BAA4B,GACnE,CAAE,YAAAC,CAAY,EAAI,KAAM,QAAO,0CAA0C,EACzE,CAAE,IAAAC,CAAI,EAAI,aAAa,8BAA8B,EACrD,CAAE,MAAAC,CAAM,EAAI,KAAa,QAAA,iCAAiC,EAC1D,CAAE,IAAAC,CAAI,EAAI,KAAa,QAAA,+BAA+B,EACtD,CAAE,YAAAC,CAAY,EAAI,KAAM,QAAO,yCAAyC,EACxE,CAAE,oBAAAC,CAAoB,EAAI,KAAM,QAAO,kCAAkC,EACzE,CAAE,oBAAAC,CAAoB,EAAI,aACzB,uCACF,CACF,MAAQ,CACNR,EAAyB,EAC3B,CAUa,MAAAS,EACXC,GAEKV,EAME,CACL,SAAU,IAAIG,EAAsC,CAClD,SAAUD,EACV,GAAGQ,EAAQ,GACb,CAAC,EACD,UACEA,EAAQ,SAAW,QACf,IAAIN,EAAwC,CAC1C,QAASO,EAAK,QACZb,EAAQ,QACN,+DACF,CACF,EACA,YAAa,GACb,GAAGY,EAAQ,KACb,CAAC,EACD,IAAIL,EAAsC,CACxC,UAAW,OACX,GAAGK,EAAQ,GACb,CAAC,EACP,mBAAoBA,EAAQ,OAAS,EACvC,GA1BE,QAAQ,MAAM,kDAAkD,EAEzD,MAmEEE,EAAwB,CACnCF,EAAoC,KACT,CAC3B,MAAMG,EAAkBJ,EAAmBC,CAAO,EAElD,GAAI,CAACG,EAAiB,OAAO,KAE7B,KAAM,CAAE,UAAAC,EAAW,SAAAC,CAAS,EAAIF,EAE1BG,EAAUV,EAAY,EACtBW,EAAUV,EAAoBS,CAAO,EAEvCN,EAAQ,OAAS,IACnBF,EAAsDS,CAAO,EAE/D,MAAMC,EAAa,IAAY,CAEzBJ,aAAqBV,GAAOU,EAAU,YAC5C,EAEMK,EAAQ,IAAY,CACxBJ,EAAS,MACX,CAAA,EAEMK,EAAc,IAAc,CAChC,MAAMC,EAAQL,EAAQ,UACpBF,EAAU,WACRb,EAAW,SAAS,GAAIY,CAAe,CAKzC,CACF,EAEA,OAAAK,EAAAA,EAEOG,CACT,EAEA,MAAO,CACL,QAAAL,EACA,gBAAAH,EACA,qBAAsBH,EAAQ,sBAAwB,GACtD,UAAWA,EAAQ,WAAa,GAChC,WAAAQ,EACA,MAAAC,EACA,YAAAC,EACA,YAAaV,EAAQ,aAAe,IACtC,CACF,EAEaY,EAA8C,CAACC,EAAIC,IAAa,CAC3E,KAAM,CACJ,qBAAAC,EACA,QAAAT,EACA,gBAAAH,EACA,UAAAa,EACA,YAAAC,CACF,EAAIH,EAEJD,EAAG,IAAIK,EAAK,CACV,qBAAAH,EACA,UAAAC,EACA,OAAQ,CAACG,EAASC,IAAgB,CAChC,MAAMC,EAAe9B,EAClB,SAAS4B,EAAShB,CAAe,EACjC,QAAQgB,EAAS,CAChB,QAASC,CACX,CAAC,EAEGE,EAAShB,EAAQ,UAAUe,CAAY,EAE7C,OAAOJ,IAAcK,EAAQF,CAAW,GAAKE,CAC/C,CACF,CAAC,CACH"}