const a=(t,r)=>{const n=t.pos,s=t.src.charAt(n);if(r||s!=="=")return!1;const k=t.scanDelims(t.pos,!0);let{length:o}=k;if(o<2)return!1;if(o%2){const e=t.push("text","",0);e.content=s,o--}for(let e=0;e<o;e+=2){const c=t.push("text","",0);c.content=`${s}${s}`,(k.can_open||k.can_close)&&t.delimiters.push({marker:61,length:0,token:t.tokens.length-1,end:-1,open:k.can_open,close:k.can_close})}return t.pos+=k.length,!0},l=(t,r)=>{let n;const s=[],k=r.length;for(let o=0;o<k;o++){const e=r[o];if(e.marker===61&&e.end!==-1){const c=r[e.end];n=t.tokens[e.token],n.type="mark_open",n.tag="mark",n.nesting=1,n.markup="==",n.content="",n=t.tokens[c.token],n.type="mark_close",n.tag="mark",n.nesting=-1,n.markup="==",n.content="",t.tokens[c.token-1].type==="text"&&t.tokens[c.token-1].content==="="&&s.push(c.token-1)}}for(;s.length;){const o=s.pop();let e=o+1;for(;e<t.tokens.length&&t.tokens[e].type==="mark_close";)e++;e--,o!==e&&(n=t.tokens[e],t.tokens[e]=t.tokens[o],t.tokens[o]=n)}},p=t=>{t.inline.ruler.before("emphasis","mark",a),t.inline.ruler2.before("emphasis","mark",r=>{const n=r.tokens_meta||[];l(r,r.delimiters);for(const s of n)s?.delimiters&&l(r,s.delimiters);return!0})};export{p as mark};
//# sourceMappingURL=index.js.map
