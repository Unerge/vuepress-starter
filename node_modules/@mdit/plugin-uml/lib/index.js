const S=(p,{name:a,open:h,close:m,render:d}={name:"uml",open:"start",close:"end",render:(o,i)=>{const u=o[i],{content:e,info:c,type:f}=u;return`<div class="${f}" title="${c}">${e}</div>`}})=>{const o=`@${h}`,i=`@${m}`,u=(e,c,f,$)=>{let n=e.bMarks[c]+e.tShift[c],l=e.eMarks[c];if(e.src.charAt(n)!=="@")return!1;let t;for(t=0;t<o.length;++t)if(o[t]!==e.src[n+t])return!1;const g=e.src.slice(n,n+t),M=e.src.slice(n+t,l);if($)return!0;let k=!1,s=c;for(;s<f&&(n=e.bMarks[s]+e.tShift[s],l=e.eMarks[s],!(n<l&&e.sCount[s]<e.blkIndent));){if(e.src.charAt(n)==="@"&&e.sCount[s]<=e.sCount[c]){let b=!0;for(t=0;t<i.length;++t)if(i[t]!==e.src[n+t]){b=!1;break}if(b&&e.skipSpaces(n+t)>=l){k=!0;break}}s++}const C=e.src.split(`
`).slice(c+1,s).join(`
`),r=e.push(a,"uml",0);return r.block=!0,r.info=M,r.content=C,r.map=[c,s],r.markup=g,e.line=s+(k?1:0),!0};p.block.ruler.before("fence",a,u,{alt:["paragraph","reference","blockquote","list"]}),p.renderer.rules[a]=d};export{S as uml};
//# sourceMappingURL=index.js.map
