{"version":3,"file":"index.js","sources":["../src/plugin.ts"],"sourcesContent":["import type { PluginWithOptions } from \"markdown-it\";\n\nimport type { MarkdownItImgMarkOptions } from \"./options.js\";\n\nexport const imgMark: PluginWithOptions<MarkdownItImgMarkOptions> = (\n  md,\n  { light = [\"light\"], dark = [\"dark\"] } = {},\n): void => {\n  const originalImageRender = md.renderer.rules.image!;\n\n  md.renderer.rules.image = (tokens, index, options, env, self): string => {\n    const token = tokens[index];\n    const src = token.attrGet(\"src\");\n\n    if (src)\n      if (light.some((item) => src.endsWith(`#${item}`))) {\n        token.attrSet(\"data-mode\", \"lightmode-only\");\n        token.attrSet(\"src\", src.replace(/#.*?$/, \"\"));\n      } else if (dark.some((item) => src.endsWith(`#${item}`))) {\n        token.attrSet(\"data-mode\", \"darkmode-only\");\n        token.attrSet(\"src\", src.replace(/#.*?$/, \"\"));\n      }\n\n    return originalImageRender(tokens, index, options, env, self);\n  };\n};\n"],"names":["imgMark","md","light","dark","originalImageRender","tokens","index","options","env","self","token","src","item"],"mappings":"AAIa,MAAAA,EAAuD,CAClEC,EACA,CAAE,MAAAC,EAAQ,CAAC,OAAO,EAAG,KAAAC,EAAO,CAAC,MAAM,CAAE,EAAI,CAAC,IACjC,CACT,MAAMC,EAAsBH,EAAG,SAAS,MAAM,MAE9CA,EAAG,SAAS,MAAM,MAAQ,CAACI,EAAQC,EAAOC,EAASC,EAAKC,IAAiB,CACvE,MAAMC,EAAQL,EAAOC,CAAK,EACpBK,EAAMD,EAAM,QAAQ,KAAK,EAE/B,OAAIC,IACET,EAAM,KAAMU,GAASD,EAAI,SAAS,IAAIC,CAAI,EAAE,CAAC,GAC/CF,EAAM,QAAQ,YAAa,gBAAgB,EAC3CA,EAAM,QAAQ,MAAOC,EAAI,QAAQ,QAAS,EAAE,CAAC,GACpCR,EAAK,KAAMS,GAASD,EAAI,SAAS,IAAIC,CAAI,EAAE,CAAC,IACrDF,EAAM,QAAQ,YAAa,eAAe,EAC1CA,EAAM,QAAQ,MAAOC,EAAI,QAAQ,QAAS,EAAE,CAAC,IAG1CP,EAAoBC,EAAQC,EAAOC,EAASC,EAAKC,CAAI,CAC9D,CACF"}