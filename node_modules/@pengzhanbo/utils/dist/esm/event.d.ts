/**
 * @category Event
 */
export declare class BaseEvent {
    private _listeners;
    constructor();
    /**
     * Adds a listener to the specified event.
     *
     * @param event - the event to listen for
     * @param listener - the listener function to be called when the event is triggered
     * @return
     */
    on(event: string, listener: Function): void;
    /**
     * Emits the specified event with the given arguments to all registered listeners.
     *
     * @param event - the name of the event to emit
     * @param args - the arguments to pass to the event listeners
     * @return
     */
    emit(event: string, ...args: any[]): void;
    /**
     * Turn off the specified event listener.
     *
     * @param event - the name of the event to turn off
     * @param listener - (optional) the listener function to turn off
     */
    off(event: string, listener?: Function): void;
    /**
     * Execute the listener at most once for a particular event.
     *
     * @param event - the event to listen for
     * @param listener - the function to be executed once for the event
     */
    once(event: string, listener: Function): void;
}
