import { getTypeName } from "./common.mjs";
export function isDef(v) {
  return typeof v !== "undefined";
}
export function isBoolean(v) {
  return typeof v === "boolean";
}
export function isFunction(v) {
  return typeof v === "function";
}
export function isNumber(v) {
  return typeof v === "number";
}
export function isString(v) {
  return typeof v === "string";
}
export function isSymbol(v) {
  return typeof v === "symbol";
}
export function isObject(v) {
  return getTypeName(v) === "object";
}
export function isArray(v) {
  return Array.isArray(v);
}
export function isUndefined(v) {
  return typeof v === "undefined";
}
export function isNull(v) {
  return getTypeName(v) === "null";
}
export function isRegexp(v) {
  return getTypeName(v) === "regexp";
}
export function isDate(v) {
  return getTypeName(v) === "date";
}
export function isEmptyObject(v) {
  if (!isObject(v))
    return false;
  for (const _ in v)
    return false;
  return true;
}
export function isWindow(v) {
  return typeof v !== "undefined" && getTypeName(v) === "window";
}
export function isBrowser() {
  return typeof window !== "undefined";
}
