const RE_HTTP = /^(https?:)?\/\//i;
export function isHttp(url) {
  return RE_HTTP.test(url);
}
export function isUrl(url) {
  try {
    new URL(url);
    return true;
  } catch {
    return false;
  }
}
const RE_PROTOCOL = /^([a-z][a-z\d+\-.]*:)?\/\//i;
export function isAbsoluteUrl(url) {
  return RE_PROTOCOL.test(url);
}
export function combineURLs(baseUrl, ...urls) {
  if (urls.length === 0)
    return baseUrl;
  const url = urls.join("/").replace(/\/\/+/g, "/").replace(/^\/+/, "");
  baseUrl = baseUrl.replace(/\/+$/, "");
  return `${baseUrl}/${url}`;
}
const RE_PROTOCOL_MATCH = /^([-+\w]{1,25})(:?\/\/|:)/;
export function parseProtocol(url) {
  const match = RE_PROTOCOL_MATCH.exec(url);
  return match && match[1] || "";
}
