import{wait as p,decodeData as l,LoadingIcon as d}from"@vuepress/helper/client";import{useEventListener as h,useDebounceFn as u}from"@vueuse/core";import{defineComponent as f,ref as m,shallowRef as _,onMounted as g,onUnmounted as v,h as r}from"vue";import"../styles/echarts.scss";import{u as y}from"../echarts-CVsAPTix.js";const C=(async()=>{}).constructor,w=(e,i,o)=>i==="js"?C("myChart",`let width,height,option,__echarts_config__;
{
${e}
__echarts_config__={width,height,option};
}
return __echarts_config__;
`)(o):Promise.resolve({option:JSON.parse(e)});var E=f({name:"ECharts",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(e){const i=y(),o=m(!0),n=_();let t;return h("resize",u(()=>t?.resize(),100)),g(()=>{Promise.all([import("echarts"),p(MARKDOWN_ENHANCE_DELAY)]).then(async([s])=>{await i.setup?.(),t=s.init(n.value);const{option:a,...c}=await w(l(e.config),e.type,t);t.resize(c),t.setOption({...i.option,...a}),o.value=!1})}),v(()=>{t?.dispose()}),()=>[e.title?r("div",{class:"echarts-title"},decodeURIComponent(e.title)):null,r("div",{class:"echarts-wrapper"},[r("div",{ref:n,class:"echarts-container",id:e.id}),o.value?r(d,{class:"echarts-loading",height:360}):null])]}});export{E as default};
//# sourceMappingURL=ECharts.js.map
