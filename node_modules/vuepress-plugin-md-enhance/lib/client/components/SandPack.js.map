{"version":3,"file":"SandPack.js","sources":["../../../src/client/components/SandPack.ts"],"sourcesContent":["import { decodeData, deepAssign } from \"@vuepress/helper/client\";\nimport { useMutationObserver } from \"@vueuse/core\";\nimport type {\n  SandpackFiles,\n  SandpackOptions,\n  SandpackPredefinedTemplate,\n  SandpackSetup,\n  SandpackThemeProp,\n} from \"sandpack-vue3\";\nimport { Sandpack } from \"sandpack-vue3\";\nimport type { PropType, VNode } from \"vue\";\nimport { computed, defineComponent, h, onMounted, ref } from \"vue\";\n\nimport { useSandpackConfig } from \"../helpers/index.js\";\nimport { getDarkmodeStatus } from \"../utils/index.js\";\n\nimport \"../styles/sandpack.scss\";\n\nconst getSandpackFiles = (files: string): SandpackFiles =>\n  JSON.parse(decodeData(files)) as SandpackFiles;\n\nconst getSandpackOptions = (options: string): SandpackOptions =>\n  JSON.parse(decodeData(options)) as SandpackOptions;\n\nconst getSandpackCustomSetup = (customSetup: string): SandpackSetup =>\n  JSON.parse(decodeData(customSetup)) as SandpackSetup;\n\nexport default defineComponent({\n  name: \"SandPack\",\n\n  props: {\n    /**\n     * Sandpack title\n     *\n     * 演示标题\n     */\n    title: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Sandpack template\n     *\n     * 演示工程模板\n     */\n    template: {\n      type: String as PropType<SandpackPredefinedTemplate>,\n      default: \"\",\n    },\n\n    /**\n     * Sandpack file data\n     *\n     * 演示文件数据\n     */\n    files: { type: String, required: true },\n\n    /**\n     * Sandpack options\n     *\n     * 演示设置\n     */\n    options: { type: String, default: \"{}\" },\n\n    /**\n     * Sandpack customSetup\n     *\n     * 自定义设置\n     */\n    customSetup: { type: String, default: \"{}\" },\n\n    /**\n     * Theme\n     *\n     * 主题\n     */\n    theme: {\n      type: String as PropType<SandpackThemeProp>,\n      default: \"\",\n    },\n\n    /**\n     * RTL layout\n     *\n     * RTL 布局\n     */\n    rtl: Boolean,\n  },\n\n  setup(props) {\n    const sandpackConfig = useSandpackConfig();\n\n    const isDarkmode = ref(false);\n\n    const options = computed(() =>\n      deepAssign({}, sandpackConfig.options, getSandpackOptions(props.options)),\n    );\n    const template = computed(() => props.template || sandpackConfig.template);\n    const theme = computed(() =>\n      props.theme || isDarkmode.value ? \"dark\" : \"light\",\n    );\n    const customSetup = computed(() =>\n      deepAssign(\n        {},\n        sandpackConfig.customSetup,\n        getSandpackCustomSetup(props.customSetup),\n      ),\n    );\n\n    onMounted(() => {\n      isDarkmode.value = getDarkmodeStatus();\n\n      // Watch darkmode change\n      useMutationObserver(\n        document.documentElement,\n        () => {\n          isDarkmode.value = getDarkmodeStatus();\n        },\n        {\n          attributeFilter: [\"class\", \"data-theme\"],\n          attributes: true,\n        },\n      );\n    });\n\n    return (): (VNode | null)[] => [\n      h(\"div\", { class: \"vp-container sandpack-wrapper\" }, [\n        props.title\n          ? h(\n              \"div\",\n              { class: \"vp-container-header\" },\n              h(\n                \"div\",\n                { class: \"vp-container-title\" },\n                decodeURIComponent(props.title),\n              ),\n            )\n          : null,\n        h(\n          \"div\",\n          { class: \"sandpack-container\" },\n          h(Sandpack, {\n            template: template.value,\n            theme: theme.value,\n            files: getSandpackFiles(props.files),\n            options: options.value,\n            customSetup: customSetup.value,\n            rtl: props.rtl,\n          }),\n        ),\n      ]),\n    ];\n  },\n});\n"],"names":["getSandpackFiles","files","decodeData","getSandpackOptions","options","getSandpackCustomSetup","customSetup","SandPack","defineComponent","props","sandpackConfig","useSandpackConfig","isDarkmode","ref","computed","deepAssign","template","theme","onMounted","getDarkmodeStatus","useMutationObserver","h","Sandpack"],"mappings":"qXAkBA,MAAMA,EAAoBC,GACxB,KAAK,MAAMC,EAAWD,CAAK,CAAC,EAExBE,EAAsBC,GAC1B,KAAK,MAAMF,EAAWE,CAAO,CAAC,EAE1BC,EAA0BC,GAC9B,KAAK,MAAMJ,EAAWI,CAAW,CAAC,EAEpC,IAAAC,EAAeC,EAAgB,CAC7B,KAAM,WAEN,MAAO,CAML,MAAO,CACL,KAAM,OACN,QAAS,EACX,EAOA,SAAU,CACR,KAAM,OACN,QAAS,EACX,EAOA,MAAO,CAAE,KAAM,OAAQ,SAAU,EAAK,EAOtC,QAAS,CAAE,KAAM,OAAQ,QAAS,IAAK,EAOvC,YAAa,CAAE,KAAM,OAAQ,QAAS,IAAK,EAO3C,MAAO,CACL,KAAM,OACN,QAAS,EACX,EAOA,IAAK,OACP,EAEA,MAAMC,EAAO,CACX,MAAMC,EAAiBC,EAAkB,EAEnCC,EAAaC,EAAI,EAAK,EAEtBT,EAAUU,EAAS,IACvBC,EAAW,GAAIL,EAAe,QAASP,EAAmBM,EAAM,OAAO,CAAC,CAC1E,EACMO,EAAWF,EAAS,IAAML,EAAM,UAAYC,EAAe,QAAQ,EACnEO,EAAQH,EAAS,IACrBL,EAAM,OAASG,EAAW,MAAQ,OAAS,OAC7C,EACMN,EAAcQ,EAAS,IAC3BC,EACE,GACAL,EAAe,YACfL,EAAuBI,EAAM,WAAW,CAC1C,CACF,EAEA,OAAAS,EAAU,IAAM,CACdN,EAAW,MAAQO,EAAkB,EAGrCC,EACE,SAAS,gBACT,IAAM,CACJR,EAAW,MAAQO,EACrB,CAAA,EACA,CACE,gBAAiB,CAAC,QAAS,YAAY,EACvC,WAAY,EACd,CACF,CACF,CAAC,EAEM,IAAwB,CAC7BE,EAAE,MAAO,CAAE,MAAO,+BAAgC,EAAG,CACnDZ,EAAM,MACFY,EACE,MACA,CAAE,MAAO,qBAAsB,EAC/BA,EACE,MACA,CAAE,MAAO,oBAAqB,EAC9B,mBAAmBZ,EAAM,KAAK,CAChC,CACF,EACA,KACJY,EACE,MACA,CAAE,MAAO,oBAAqB,EAC9BA,EAAEC,EAAU,CACV,SAAUN,EAAS,MACnB,MAAOC,EAAM,MACb,MAAOjB,EAAiBS,EAAM,KAAK,EACnC,QAASL,EAAQ,MACjB,YAAaE,EAAY,MACzB,IAAKG,EAAM,GACb,CAAC,CACH,CACF,CAAC,CACH,CACF,CACF,CAAC"}