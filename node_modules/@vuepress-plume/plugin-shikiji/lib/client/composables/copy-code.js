// src/client/composables/copy-code.ts
import { useClipboard, useEventListener } from "@vueuse/core";
var SHELL_RE = /language-(?:shellscript|shell|bash|sh|zsh)/;
var IGNORE_NODES = [".vp-copy-ignore", ".diff.remove"];
function useCopyCode({
  selector = 'div[class*="language-"] > button.copy',
  duration = 2e3
} = {}) {
  if (__VUEPRESS_SSR__)
    return;
  const timeoutIdMap = /* @__PURE__ */ new WeakMap();
  const { copy } = useClipboard({ legacy: true });
  useEventListener("click", (e) => {
    const el = e.target;
    if (el.matches(selector)) {
      const parent = el.parentElement;
      const sibling = el.nextElementSibling;
      if (!parent || !sibling)
        return;
      const isShell = SHELL_RE.test(parent.className);
      const clone = sibling.cloneNode(true);
      clone.querySelectorAll(IGNORE_NODES.join(",")).forEach((node) => node.remove());
      let text = clone.textContent || "";
      if (isShell)
        text = text.replace(/^ *(\$|>) /gm, "").trim();
      copy(text).then(() => {
        if (duration <= 0)
          return;
        el.classList.add("copied");
        clearTimeout(timeoutIdMap.get(el));
        const timeoutId = setTimeout(() => {
          el.classList.remove("copied");
          el.blur();
          timeoutIdMap.delete(el);
        }, duration);
        timeoutIdMap.set(el, timeoutId);
      });
    }
  });
}
export {
  useCopyCode
};
